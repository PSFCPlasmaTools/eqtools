! File _tricub.pyf
python module _tricub
interface
    
C    This file is part of the EqTools package.
C
C    EqTools is free software: you can redistribute it and/or modify
C    it under the terms of the GNU General Public License as published by
C    the Free Software Foundation, either version 3 of the License, or
C    (at your option) any later version.
C
C    EqTools is distributed in the hope that it will be useful,
C    but WITHOUT ANY WARRANTY; without even the implied warranty of
C    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
C    GNU General Public License for more details.
C
C    You should have received a copy of the GNU General Public License
C    along with EqTools.  If not, see <http://www.gnu.org/licenses/>.
C
C    Copyright 2013 Ian C. Faust
     
   subroutine reg_ev(val,dx0,dx1,dx2,f,pos,loc,fx0,fx1,fx2,ix)
      intent(c) reg_ev
      intent(c)
	     
      integer intent(hide),depend(dx0) :: ix = len(dx0)
      integer intent(hide),depend(f) :: fx0 = shape(f,2)
      integer intent(hide),depend(f) :: fx1 = shape(f,1)
      integer intent(hide),depend(f) :: fx2 = shape(f,0)
      double precision intent(in) :: dx0(ix)
      double precision intent(in) :: dx1(ix)
      double precision intent(in) :: dx2(ix)
      integer intent(in) :: pos(ix)
      integer intent(in) :: loc(ix)
      double precision intent(in) :: f(fx0,fx1,fx2)
      double precision intent(out) :: val(ix)
   end subroutine reg_ev
     
   function ismonotonic(val,ix)
      intent(c) ismonotonic
      intent(c)

      integer intent(hide),depened(val) :: ix = len(val)
      double precision intent(in) :: val(ix)
     
   end function ismonotonic  

   function isregular(val,ix)
      intent(c) isregular
      intent(c)

      integer intent(hide),depened(val) :: ix = len(val)
      double precision intent(in) :: val(ix)
     
   end function isregular(val,ix)

end interface
end python module _tricub
		   
